"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/api/game.js":
/*!*************************!*\
  !*** ./src/api/game.js ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Game\": function() { return /* binding */ Game; }\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils */ \"./src/utils/index.js\");\n\nclass Game {\n    async getLastPublished() {\n        try {\n            const sort = \"sort=publishedAt:desc\";\n            const pagination = \"pagination[limit]=1\";\n            const populate = \"populate=*\";\n            const url = \"\".concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.API_URL, \"/\").concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.ENDPOINTS.GAME, \"?\").concat(sort, \"&\").concat(pagination, \"&\").concat(populate);\n            const response = await fetch(url);\n            const result = await response.json();\n            if (response.status !== 200) throw result;\n            return result;\n        } catch (error) {\n            throw error;\n        }\n    }\n    async getAll() {\n        try {\n            const populate = \"populate=platform\";\n            const url = \"\".concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.API_URL, \"/\").concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.ENDPOINTS.GAME, \"?\").concat(populate);\n            const response = await fetch(url);\n            const result = await response.json();\n            if (response.status !== 200) throw result;\n            return result;\n        } catch (error) {\n            throw error;\n        }\n    }\n    async create(data) {\n        try {\n            const url = \"\".concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.API_URL, \"/\").concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.ENDPOINTS.GAME);\n            const params = {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    data: {\n                        title: data.title,\n                        price: Number(data.price),\n                        discount: Number(data.discount) || undefined,\n                        slug: data.slug,\n                        summary: data.summary,\n                        video: data.video,\n                        releaseDate: data.releaseDate,\n                        platform: Number(data.platform)\n                    }\n                })\n            };\n            const response = await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.authFetch)(url, params);\n            const result = await response.json();\n            if (response.status !== 200) throw result;\n            return result;\n        } catch (error) {\n            throw error;\n        }\n    }\n    async uploadFile(files, gameId, field) {\n        try {\n            const url = \"\".concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.API_URL, \"/\").concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.ENDPOINTS.UPLOAD);\n            const formData = new FormData();\n            formData.append(\"ref\", \"api::game.game\");\n            formData.append(\"refId\", gameId);\n            formData.append(\"field\", field);\n            for (const file of files){\n                formData.append(\"files\", file);\n            }\n            const params = {\n                method: \"POST\",\n                body: formData\n            };\n            const response = await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.authFetch)(url, params);\n            const result = await response.json();\n            console.log(params);\n            if (response.status !== 200) throw result;\n            return result;\n        } catch (error) {\n            throw error;\n        }\n    }\n    async update(data, gameId) {\n        console.log(data);\n        try {\n            const url = \"\".concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.API_URL, \"/\").concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.ENDPOINTS.GAME, \"/\").concat(gameId);\n            const params = {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    data: {\n                        title: data.title,\n                        price: Number(data.price),\n                        discount: Number(data.discount) || undefined,\n                        slug: data.slug,\n                        summary: data.summary,\n                        video: data.video,\n                        releaseDate: data.releaseDate,\n                        platform: Number(data.platform),\n                        stock: Number(data.stock)\n                    }\n                })\n            };\n            const response = await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.authFetch)(url, params);\n            const result = await response.json();\n            if (response.status !== 200) throw result;\n            return result;\n        } catch (error) {\n            throw error;\n        }\n    }\n    async delete(gameId) {\n        try {\n            const url = \"\".concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.API_URL, \"/\").concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.ENDPOINTS.GAME, \"/\").concat(gameId);\n            const params = {\n                method: \"DELETE\"\n            };\n            const response = await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.authFetch)(url, params);\n            const result = await response.json();\n            if (response.status !== 200) throw result;\n            return result;\n        } catch (error) {\n            throw error;\n        }\n    }\n    async getLatestPublished(param) {\n        let { limit =9 , platformId =null  } = param;\n        try {\n            const filterPlatform = platformId && \"filters[platform][id][$eq]=\".concat(platformId);\n            const paginationLimit = \"pagination[limit]=\".concat(limit);\n            const sort = \"sort[0]=publishedAt:desc\";\n            const populate = \"populate=*\";\n            const urlParams = \"\".concat(sort, \"&\").concat(paginationLimit, \"&\").concat(filterPlatform, \"&\").concat(populate);\n            const url = \"\".concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.API_URL, \"/\").concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.ENDPOINTS.GAME, \"?\").concat(urlParams);\n            const response = await fetch(url);\n            const result = await response.json();\n            if (response.status !== 200) throw result;\n            return result;\n        } catch (error) {\n            throw error;\n        }\n    }\n    async getGamesByPlatformSlug(slug, page) {\n        try {\n            const filters = \"filters[platform][slug][$eq]=\".concat(slug);\n            const pagination = \"pagination[page]=\".concat(page, \"&pagination[pageSize]=30\");\n            const populate = \"populate=*\";\n            const urlParams = \"\".concat(filters, \"&\").concat(pagination, \"&\").concat(populate);\n            const url = \"\".concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.API_URL, \"/\").concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.ENDPOINTS.GAME, \"?\").concat(urlParams);\n            const response = await fetch(url);\n            const result = await response.json();\n            if (response.status !== 200) throw result;\n            return result;\n        } catch (error) {\n            throw error;\n        }\n    }\n    async searchGames(text, page) {\n        const { s , p , o , d  } = text;\n        try {\n            const filters = \"filters[title][$containsi]=\".concat(s).concat(p ? \"&filters[platform][id][$eq]=\".concat(p) : \"\").concat(d ? \"&filters[discount][$null]\" : \"\").concat(o ? \"&sort=\".concat(o) : \"\");\n            const pagination = \"pagination[page]=\".concat(page, \"&pagination[pageSize]=30\");\n            const populate = \"populate=*\";\n            const urlParams = \"\".concat(filters, \"&\").concat(pagination, \"&\").concat(populate);\n            const url = \"\".concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.API_URL, \"/\").concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.ENDPOINTS.GAME, \"?\").concat(urlParams);\n            const response = await fetch(url);\n            const result = await response.json();\n            if (response.status !== 200) throw result;\n            return result;\n        } catch (error) {\n            throw error;\n        }\n    }\n    async getBySlug(slug) {\n        try {\n            const filters = \"filters[slug][$eq]=\".concat(slug);\n            const populate = \"populate[0]=wallpaper&populate[1]=cover&populate&populate[2]=screenshots&populate[3]=platform&populate[4]=platform.icon\";\n            const url = \"\".concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.API_URL, \"/\").concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.ENDPOINTS.GAME, \"?\").concat(filters, \"&\").concat(populate);\n            const response = await fetch(url);\n            const result = await response.json();\n            if (response.status !== 200) throw result;\n            return result.data[0];\n        } catch (error) {\n            throw error;\n        }\n    }\n    async getGameById(id) {\n        try {\n            const populate = \"populate[0]=cover&populate[1]=platform\";\n            const url = \"\".concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.API_URL, \"/\").concat(_utils__WEBPACK_IMPORTED_MODULE_0__.ENV.ENDPOINTS.GAME, \"/\").concat(id, \"?\").concat(populate);\n            const response = await fetch(url);\n            const result = await response.json();\n            if (response.status !== 200) throw result;\n            return result;\n        } catch (error) {\n            throw error;\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU9BO1FBQ1QsRUFBRSxPQUFPRyxPQUFPO1lBQ2QsTUFBTUEsTUFBTTtRQUNkO0lBQ0Y7SUFFQSxNQUFNaUQsVUFBVWxDLElBQUksRUFBRTtRQUNwQixJQUFJO1lBQ0YsTUFBTTJCLFVBQVUsc0JBQTJCLE9BQUwzQjtZQUN0QyxNQUFNekIsV0FBWTtZQUNsQixNQUFNQyxNQUFNLEdBQWtCUCxPQUFmQSwrQ0FBVyxFQUFDLEtBQXlCMEQsT0FBdEIxRCxzREFBa0IsRUFBQyxLQUFjTSxPQUFYb0QsU0FBUSxLQUFZLE9BQVRwRDtZQUUvRCxNQUFNSyxXQUFXLE1BQU1DLE1BQU1MO1lBQzdCLE1BQU1NLFNBQVMsTUFBTUYsU0FBU0csSUFBSTtZQUVsQyxJQUFJSCxTQUFTSSxNQUFNLEtBQUssS0FBSyxNQUFNRixPQUFPO1lBRTFDLE9BQU9BLE9BQU9NLElBQUksQ0FBQyxFQUFFO1FBQ3ZCLEVBQUUsT0FBT0gsT0FBTztZQUNkLE1BQU1BLE1BQU07UUFDZDtJQUNGO0lBRUEsTUFBTWtELFlBQVlDLEVBQUUsRUFBRTtRQUNwQixJQUFJO1lBQ0YsTUFBTTdELFdBQVk7WUFFbEIsTUFBTUMsTUFBTSxHQUFrQlAsT0FBZkEsK0NBQVcsRUFBQyxLQUF5Qm1FLE9BQXRCbkUsc0RBQWtCLEVBQUMsS0FBU00sT0FBTjZELElBQUcsS0FBWSxPQUFUN0Q7WUFDMUQsTUFBTUssV0FBVyxNQUFNQyxNQUFNTDtZQUM3QixNQUFNTSxTQUFTLE1BQU1GLFNBQVNHLElBQUk7WUFFbEMsSUFBSUgsU0FBU0ksTUFBTSxLQUFLLEtBQUssTUFBTUYsT0FBTztZQUUxQyxPQUFPQTtRQUNULEVBQUUsT0FBT0csT0FBTztZQUNkLE1BQU1BLE1BQU07UUFDZDtJQUNGO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXBpL2dhbWUuanM/Y2I4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFTlYsIGF1dGhGZXRjaCB9IGZyb20gXCJAL3V0aWxzXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgR2FtZSB7XHJcbiAgYXN5bmMgZ2V0TGFzdFB1Ymxpc2hlZCgpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHNvcnQgPSBcInNvcnQ9cHVibGlzaGVkQXQ6ZGVzY1wiO1xyXG4gICAgICBjb25zdCBwYWdpbmF0aW9uID0gXCJwYWdpbmF0aW9uW2xpbWl0XT0xXCI7XHJcbiAgICAgIGNvbnN0IHBvcHVsYXRlID0gXCJwb3B1bGF0ZT0qXCI7XHJcbiAgICAgIGNvbnN0IHVybCA9IGAke0VOVi5BUElfVVJMfS8ke0VOVi5FTkRQT0lOVFMuR0FNRX0/JHtzb3J0fSYke3BhZ2luYXRpb259JiR7cG9wdWxhdGV9YDtcclxuXHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTtcclxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB0aHJvdyByZXN1bHQ7XHJcblxyXG4gICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGFzeW5jIGdldEFsbCgpIHtcclxuICAgIHRyeSB7XHJcblxyXG4gICAgICBjb25zdCBwb3B1bGF0ZSA9IFwicG9wdWxhdGU9cGxhdGZvcm1cIjtcclxuICAgICAgY29uc3QgdXJsID0gYCR7RU5WLkFQSV9VUkx9LyR7RU5WLkVORFBPSU5UUy5HQU1FfT8ke3BvcHVsYXRlfWA7XHJcblxyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCk7XHJcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuXHJcbiAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgIT09IDIwMCkgdGhyb3cgcmVzdWx0O1xyXG5cclxuICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuICBhc3luYyBjcmVhdGUoZGF0YSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgdXJsID0gYCR7RU5WLkFQSV9VUkx9LyR7RU5WLkVORFBPSU5UUy5HQU1FfWA7XHJcbiAgICAgIGNvbnN0IHBhcmFtcyA9IHtcclxuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICB0aXRsZTogZGF0YS50aXRsZSxcclxuICAgICAgICAgICAgcHJpY2U6IE51bWJlcihkYXRhLnByaWNlKSxcclxuICAgICAgICAgICAgZGlzY291bnQ6IE51bWJlcihkYXRhLmRpc2NvdW50KSB8fCB1bmRlZmluZWQsXHJcbiAgICAgICAgICAgIHNsdWc6IGRhdGEuc2x1ZyxcclxuICAgICAgICAgICAgc3VtbWFyeTogZGF0YS5zdW1tYXJ5LFxyXG4gICAgICAgICAgICB2aWRlbzogZGF0YS52aWRlbyxcclxuICAgICAgICAgICAgcmVsZWFzZURhdGU6IGRhdGEucmVsZWFzZURhdGUsXHJcbiAgICAgICAgICAgIHBsYXRmb3JtOiBOdW1iZXIoZGF0YS5wbGF0Zm9ybSlcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KSxcclxuICAgICAgfTtcclxuXHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXV0aEZldGNoKHVybCwgcGFyYW1zKTtcclxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB0aHJvdyByZXN1bHQ7XHJcblxyXG4gICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhc3luYyB1cGxvYWRGaWxlKGZpbGVzLCBnYW1lSWQsIGZpZWxkKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCB1cmwgPSBgJHtFTlYuQVBJX1VSTH0vJHtFTlYuRU5EUE9JTlRTLlVQTE9BRH1gO1xyXG4gICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpXHJcbiAgICAgIGZvcm1EYXRhLmFwcGVuZCgncmVmJywgJ2FwaTo6Z2FtZS5nYW1lJylcclxuICAgICAgZm9ybURhdGEuYXBwZW5kKCdyZWZJZCcsIGdhbWVJZClcclxuICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWVsZCcsIGZpZWxkKVxyXG4gICAgICBmb3IgKGNvbnN0IGZpbGUgb2YgZmlsZXMpIHtcclxuICAgICAgICBmb3JtRGF0YS5hcHBlbmQoXCJmaWxlc1wiLCBmaWxlKTtcclxuICAgICAgfVxyXG4gICAgICBjb25zdCBwYXJhbXMgPSB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICBib2R5OiBmb3JtRGF0YVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhdXRoRmV0Y2godXJsLCBwYXJhbXMpO1xyXG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKHBhcmFtcylcclxuICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB0aHJvdyByZXN1bHQ7XHJcblxyXG4gICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGFzeW5jIHVwZGF0ZShkYXRhLCBnYW1lSWQpIHtcclxuICAgIGNvbnNvbGUubG9nKGRhdGEpXHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCB1cmwgPSBgJHtFTlYuQVBJX1VSTH0vJHtFTlYuRU5EUE9JTlRTLkdBTUV9LyR7Z2FtZUlkfWA7XHJcbiAgICAgIGNvbnN0IHBhcmFtcyA9IHtcclxuICAgICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgIHRpdGxlOiBkYXRhLnRpdGxlLFxyXG4gICAgICAgICAgICBwcmljZTogTnVtYmVyKGRhdGEucHJpY2UpLFxyXG4gICAgICAgICAgICBkaXNjb3VudDogTnVtYmVyKGRhdGEuZGlzY291bnQpIHx8IHVuZGVmaW5lZCxcclxuICAgICAgICAgICAgc2x1ZzogZGF0YS5zbHVnLFxyXG4gICAgICAgICAgICBzdW1tYXJ5OiBkYXRhLnN1bW1hcnksXHJcbiAgICAgICAgICAgIHZpZGVvOiBkYXRhLnZpZGVvLFxyXG4gICAgICAgICAgICByZWxlYXNlRGF0ZTogZGF0YS5yZWxlYXNlRGF0ZSxcclxuICAgICAgICAgICAgcGxhdGZvcm06IE51bWJlcihkYXRhLnBsYXRmb3JtKSxcclxuICAgICAgICAgICAgc3RvY2s6IE51bWJlcihkYXRhLnN0b2NrKSxcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KSxcclxuICAgICAgfTtcclxuXHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXV0aEZldGNoKHVybCwgcGFyYW1zKTtcclxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB0aHJvdyByZXN1bHQ7XHJcblxyXG4gICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGFzeW5jIGRlbGV0ZShnYW1lSWQpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHVybCA9IGAke0VOVi5BUElfVVJMfS8ke0VOVi5FTkRQT0lOVFMuR0FNRX0vJHtnYW1lSWR9YDtcclxuICAgICAgY29uc3QgcGFyYW1zID0ge1xyXG4gICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgfTtcclxuXHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXV0aEZldGNoKHVybCwgcGFyYW1zKTtcclxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB0aHJvdyByZXN1bHQ7XHJcblxyXG4gICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGFzeW5jIGdldExhdGVzdFB1Ymxpc2hlZCh7IGxpbWl0ID0gOSwgcGxhdGZvcm1JZCA9IG51bGwgfSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgZmlsdGVyUGxhdGZvcm0gPVxyXG4gICAgICAgIHBsYXRmb3JtSWQgJiYgYGZpbHRlcnNbcGxhdGZvcm1dW2lkXVskZXFdPSR7cGxhdGZvcm1JZH1gO1xyXG4gICAgICBjb25zdCBwYWdpbmF0aW9uTGltaXQgPSBgcGFnaW5hdGlvbltsaW1pdF09JHtsaW1pdH1gO1xyXG4gICAgICBjb25zdCBzb3J0ID0gYHNvcnRbMF09cHVibGlzaGVkQXQ6ZGVzY2A7XHJcbiAgICAgIGNvbnN0IHBvcHVsYXRlID0gYHBvcHVsYXRlPSpgO1xyXG4gICAgICBjb25zdCB1cmxQYXJhbXMgPSBgJHtzb3J0fSYke3BhZ2luYXRpb25MaW1pdH0mJHtmaWx0ZXJQbGF0Zm9ybX0mJHtwb3B1bGF0ZX1gO1xyXG5cclxuICAgICAgY29uc3QgdXJsID0gYCR7RU5WLkFQSV9VUkx9LyR7RU5WLkVORFBPSU5UUy5HQU1FfT8ke3VybFBhcmFtc31gO1xyXG5cclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwpO1xyXG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcblxyXG4gICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzICE9PSAyMDApIHRocm93IHJlc3VsdDtcclxuXHJcbiAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGFzeW5jIGdldEdhbWVzQnlQbGF0Zm9ybVNsdWcoc2x1ZywgcGFnZSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgZmlsdGVycyA9IGBmaWx0ZXJzW3BsYXRmb3JtXVtzbHVnXVskZXFdPSR7c2x1Z31gO1xyXG4gICAgICBjb25zdCBwYWdpbmF0aW9uID0gYHBhZ2luYXRpb25bcGFnZV09JHtwYWdlfSZwYWdpbmF0aW9uW3BhZ2VTaXplXT0zMGA7XHJcbiAgICAgIGNvbnN0IHBvcHVsYXRlID0gXCJwb3B1bGF0ZT0qXCI7XHJcbiAgICAgIGNvbnN0IHVybFBhcmFtcyA9IGAke2ZpbHRlcnN9JiR7cGFnaW5hdGlvbn0mJHtwb3B1bGF0ZX1gO1xyXG5cclxuICAgICAgY29uc3QgdXJsID0gYCR7RU5WLkFQSV9VUkx9LyR7RU5WLkVORFBPSU5UUy5HQU1FfT8ke3VybFBhcmFtc31gO1xyXG5cclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwpO1xyXG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcblxyXG4gICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzICE9PSAyMDApIHRocm93IHJlc3VsdDtcclxuXHJcbiAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGFzeW5jIHNlYXJjaEdhbWVzKHRleHQsIHBhZ2UpIHtcclxuXHJcbiAgICBjb25zdCB7IHMsIHAsIG8sIGQgfSA9IHRleHQ7XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgZmlsdGVycyA9IGBmaWx0ZXJzW3RpdGxlXVskY29udGFpbnNpXT0ke3N9JHtwID8gYCZmaWx0ZXJzW3BsYXRmb3JtXVtpZF1bJGVxXT0ke3B9YCA6IFwiXCJ9JHtkID8gYCZmaWx0ZXJzW2Rpc2NvdW50XVskbnVsbF1gIDogXCJcIn0ke28gPyBgJnNvcnQ9JHtvfWAgOiBcIlwifWA7XHJcbiAgICAgIGNvbnN0IHBhZ2luYXRpb24gPSBgcGFnaW5hdGlvbltwYWdlXT0ke3BhZ2V9JnBhZ2luYXRpb25bcGFnZVNpemVdPTMwYDtcclxuICAgICAgY29uc3QgcG9wdWxhdGUgPSBcInBvcHVsYXRlPSpcIjtcclxuICAgICAgY29uc3QgdXJsUGFyYW1zID0gYCR7ZmlsdGVyc30mJHtwYWdpbmF0aW9ufSYke3BvcHVsYXRlfWA7XHJcblxyXG4gICAgICBjb25zdCB1cmwgPSBgJHtFTlYuQVBJX1VSTH0vJHtFTlYuRU5EUE9JTlRTLkdBTUV9PyR7dXJsUGFyYW1zfWA7XHJcblxyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCk7XHJcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuXHJcbiAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgIT09IDIwMCkgdGhyb3cgcmVzdWx0O1xyXG5cclxuICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgZ2V0QnlTbHVnKHNsdWcpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IGZpbHRlcnMgPSBgZmlsdGVyc1tzbHVnXVskZXFdPSR7c2x1Z31gO1xyXG4gICAgICBjb25zdCBwb3B1bGF0ZSA9IGBwb3B1bGF0ZVswXT13YWxscGFwZXImcG9wdWxhdGVbMV09Y292ZXImcG9wdWxhdGUmcG9wdWxhdGVbMl09c2NyZWVuc2hvdHMmcG9wdWxhdGVbM109cGxhdGZvcm0mcG9wdWxhdGVbNF09cGxhdGZvcm0uaWNvbmA7XHJcbiAgICAgIGNvbnN0IHVybCA9IGAke0VOVi5BUElfVVJMfS8ke0VOVi5FTkRQT0lOVFMuR0FNRX0/JHtmaWx0ZXJzfSYke3BvcHVsYXRlfWA7XHJcblxyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCk7XHJcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuXHJcbiAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgIT09IDIwMCkgdGhyb3cgcmVzdWx0O1xyXG5cclxuICAgICAgcmV0dXJuIHJlc3VsdC5kYXRhWzBdO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhc3luYyBnZXRHYW1lQnlJZChpZCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcG9wdWxhdGUgPSBgcG9wdWxhdGVbMF09Y292ZXImcG9wdWxhdGVbMV09cGxhdGZvcm1gO1xyXG5cclxuICAgICAgY29uc3QgdXJsID0gYCR7RU5WLkFQSV9VUkx9LyR7RU5WLkVORFBPSU5UUy5HQU1FfS8ke2lkfT8ke3BvcHVsYXRlfWA7XHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTtcclxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB0aHJvdyByZXN1bHQ7XHJcblxyXG4gICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJFTlYiLCJhdXRoRmV0Y2giLCJHYW1lIiwiZ2V0TGFzdFB1Ymxpc2hlZCIsInNvcnQiLCJwYWdpbmF0aW9uIiwicG9wdWxhdGUiLCJ1cmwiLCJBUElfVVJMIiwiRU5EUE9JTlRTIiwiR0FNRSIsInJlc3BvbnNlIiwiZmV0Y2giLCJyZXN1bHQiLCJqc29uIiwic3RhdHVzIiwiZXJyb3IiLCJnZXRBbGwiLCJjcmVhdGUiLCJkYXRhIiwicGFyYW1zIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidGl0bGUiLCJwcmljZSIsIk51bWJlciIsImRpc2NvdW50IiwidW5kZWZpbmVkIiwic2x1ZyIsInN1bW1hcnkiLCJ2aWRlbyIsInJlbGVhc2VEYXRlIiwicGxhdGZvcm0iLCJ1cGxvYWRGaWxlIiwiZmlsZXMiLCJnYW1lSWQiLCJmaWVsZCIsIlVQTE9BRCIsImZvcm1EYXRhIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJmaWxlIiwiY29uc29sZSIsImxvZyIsInVwZGF0ZSIsInN0b2NrIiwiZGVsZXRlIiwiZ2V0TGF0ZXN0UHVibGlzaGVkIiwibGltaXQiLCJwbGF0Zm9ybUlkIiwiZmlsdGVyUGxhdGZvcm0iLCJwYWdpbmF0aW9uTGltaXQiLCJ1cmxQYXJhbXMiLCJnZXRHYW1lc0J5UGxhdGZvcm1TbHVnIiwicGFnZSIsImZpbHRlcnMiLCJzZWFyY2hHYW1lcyIsInRleHQiLCJzIiwicCIsIm8iLCJkIiwiZ2V0QnlTbHVnIiwiZ2V0R2FtZUJ5SWQiLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/api/game.js\n"));

/***/ })

});